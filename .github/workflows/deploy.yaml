name: Deploy Atma.FM

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for Web App
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile # Explicitly point to the Dockerfile for the web app
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/atma-fm-flask:${{ github.sha }}

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e # Exit immediately if any command fails
            cd /home/nirvikalpa/atma-fm
            git pull origin master
            
            # Define and export IMAGE_TAG for docker pull
            IMAGE_TAG="${{ secrets.DOCKER_USERNAME }}/atma-fm-flask:${{ github.sha }}"
            export IMAGE_TAG
            docker pull "${IMAGE_TAG}"            
            export IMAGE_VERSION_TAG="${{ github.sha }}"
            echo "IMAGE_VERSION_TAG exported as: ${IMAGE_VERSION_TAG}"
            
            echo "Recreating and starting web service using image tag: ${IMAGE_VERSION_TAG}..."
            # Ensure your docker-compose.prod.yaml uses this variable for the 'web' service image.
            # Example: image: your_docker_username/atma-fm-flask:${IMAGE_VERSION_TAG}
            docker compose -f docker-compose.yaml -f docker-compose.prod.yaml up -d --no-deps --force-recreate web
            
            echo "Deployment successful for commit ${{ github.sha }}!"


